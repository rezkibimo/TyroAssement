{
	"info": {
		"_postman_id": "0bc4f886-05bd-47ff-a2fc-2dcb050200c7",
		"name": "Automated API Test",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "24736343"
	},
	"item": [
		{
			"name": "Get Products Term Deposit",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// SET Random product-category value to simulate Error 400",
							"pm.environment.set(\"product-category\", _.sample(\"TERM_DEPOSITS\", \"TERMS_DEPOSITS\"));",
							"",
							"pm.test(\"Response time is less than 250ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(250);",
							"});",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"description": "(Required) Version of the API end point requested by the client. Must be set to a positive integer.",
						"key": "x-v",
						"value": "{{x-v}}"
					},
					{
						"description": "Minimum version of the API end point requested by the client. Must be set to a positive integer if provided.",
						"key": "x-min-v",
						"value": "3",
						"disabled": true
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{BaseURL}}?effective=CURRENT&product-category={{product-category}}&page=1&page-size=25",
					"host": [
						"{{BaseURL}}"
					],
					"query": [
						{
							"key": "effective",
							"value": "CURRENT",
							"description": "Allows for the filtering of products based on whether the current time is within the period of time defined as effective by the effectiveFrom and effectiveTo fields. Valid values are ‘CURRENT’, ‘FUTURE’ and ‘ALL’. If absent defaults to 'CURRENT'"
						},
						{
							"key": "updated-since",
							"value": "<dateTime>",
							"description": "Only include products that have been updated after the specified date and time. If absent defaults to include all products",
							"disabled": true
						},
						{
							"key": "brand",
							"value": "<string>",
							"description": "Filter results based on a specific brand",
							"disabled": true
						},
						{
							"key": "product-category",
							"value": "{{product-category}}",
							"description": "Used to filter results on the productCategory field applicable to accounts. Any one of the valid values for this field can be supplied. If absent then all accounts returned."
						},
						{
							"key": "page",
							"value": "1",
							"description": "Page of results to request (standard pagination)"
						},
						{
							"key": "page-size",
							"value": "25",
							"description": "Page size to request. Default is 25 (standard pagination)"
						}
					]
				}
			},
			"response": [
				{
					"name": "Success",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) Version of the API end point requested by the client. Must be set to a positive integer.",
								"key": "x-v",
								"value": "<string>"
							},
							{
								"description": "Minimum version of the API end point requested by the client. Must be set to a positive integer if provided.",
								"key": "x-min-v",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/banking/products?effective=CURRENT&updated-since=<dateTime>&brand=<string>&product-category=TRANS_AND_SAVINGS_ACCOUNTS&page=1&page-size=25",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"banking",
								"products"
							],
							"query": [
								{
									"key": "effective",
									"value": "CURRENT"
								},
								{
									"key": "updated-since",
									"value": "<dateTime>"
								},
								{
									"key": "brand",
									"value": "<string>"
								},
								{
									"key": "product-category",
									"value": "TRANS_AND_SAVINGS_ACCOUNTS"
								},
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "page-size",
									"value": "25"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "x-v",
							"value": "qui eu sunt amet",
							"description": "The [version](https://consumerdatastandardsaustralia.github.io/standards/#response-headers) of the API end point that the data holder has responded with."
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"data\": {\n    \"products\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  },\n  \"links\": {\n    \"self\": \"https://zAYgFD.qnz8AiI8D4\",\n    \"first\": \"https://GuchPZxoV.djcYHSIL8LHIViZromp7n\",\n    \"last\": \"http://xrVDllcAMklMqDvdPvTK.mogeBJKMVMDzd8ZGQkztIN.stDq6Z\",\n    \"next\": \"http://DuftCpVQVwhGxNYv.ylgI2hpYMnSBqwwKM+X7ciLsNPPbNr4bU4b8L38GSZVjPG2Qgu3l+AtX7lcX6XW4Ap7R-z+JpTRscWE6J7X3\",\n    \"prev\": \"https://kd.lugxsDBYg9GmZW0hCHzgQuzZqgK5AiG6y+G5SGoBSIhe0Z7bgj\"\n  },\n  \"meta\": {\n    \"totalPages\": 67813073,\n    \"totalRecords\": 2252723\n  }\n}"
				},
				{
					"name": "Bad Request",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) Version of the API end point requested by the client. Must be set to a positive integer.",
								"key": "x-v",
								"value": "<string>"
							},
							{
								"description": "Minimum version of the API end point requested by the client. Must be set to a positive integer if provided.",
								"key": "x-min-v",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/banking/products?effective=CURRENT&updated-since=<dateTime>&brand=<string>&product-category=TRANS_AND_SAVINGS_ACCOUNTS&page=1&page-size=25",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"banking",
								"products"
							],
							"query": [
								{
									"key": "effective",
									"value": "CURRENT"
								},
								{
									"key": "updated-since",
									"value": "<dateTime>"
								},
								{
									"key": "brand",
									"value": "<string>"
								},
								{
									"key": "product-category",
									"value": "TRANS_AND_SAVINGS_ACCOUNTS"
								},
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "page-size",
									"value": "25"
								}
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "x-fapi-interaction-id",
							"value": "qui eu sunt amet",
							"description": "An [RFC4122](https://tools.ietf.org/html/rfc4122) UUID used as a correlation id. If provided, the data holder must play back this value in the x-fapi-interaction-id response header. If not provided a [RFC4122] UUID value is required to be provided in the response header to track the interaction. This header MUST be responded for success and error responses for authenticated APIs."
						},
						{
							"key": "x-v",
							"value": "qui eu sunt amet",
							"description": "The [version](https://consumerdatastandardsaustralia.github.io/standards/#response-headers) of the API end point that the data holder has responded with."
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"errors\": [\n    {\n      \"code\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"title\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"detail\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"meta\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"code\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"title\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"detail\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"meta\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ]\n}"
				},
				{
					"name": "Not Acceptable",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) Version of the API end point requested by the client. Must be set to a positive integer.",
								"key": "x-v",
								"value": "<string>"
							},
							{
								"description": "Minimum version of the API end point requested by the client. Must be set to a positive integer if provided.",
								"key": "x-min-v",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/banking/products?effective=CURRENT&updated-since=<dateTime>&brand=<string>&product-category=TRANS_AND_SAVINGS_ACCOUNTS&page=1&page-size=25",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"banking",
								"products"
							],
							"query": [
								{
									"key": "effective",
									"value": "CURRENT"
								},
								{
									"key": "updated-since",
									"value": "<dateTime>"
								},
								{
									"key": "brand",
									"value": "<string>"
								},
								{
									"key": "product-category",
									"value": "TRANS_AND_SAVINGS_ACCOUNTS"
								},
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "page-size",
									"value": "25"
								}
							]
						}
					},
					"status": "Not Acceptable",
					"code": 406,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "x-fapi-interaction-id",
							"value": "qui eu sunt amet",
							"description": "An [RFC4122](https://tools.ietf.org/html/rfc4122) UUID used as a correlation id. If provided, the data holder must play back this value in the x-fapi-interaction-id response header. If not provided a [RFC4122] UUID value is required to be provided in the response header to track the interaction. This header MUST be responded for success and error responses for authenticated APIs."
						},
						{
							"key": "x-v",
							"value": "qui eu sunt amet",
							"description": "The [version](https://consumerdatastandardsaustralia.github.io/standards/#response-headers) of the API end point that the data holder has responded with."
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"errors\": [\n    {\n      \"code\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"title\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"detail\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"meta\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"code\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"title\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"detail\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"meta\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ]\n}"
				},
				{
					"name": "Internal Server Error",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) Version of the API end point requested by the client. Must be set to a positive integer.",
								"key": "x-v",
								"value": "<string>"
							},
							{
								"description": "Minimum version of the API end point requested by the client. Must be set to a positive integer if provided.",
								"key": "x-min-v",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/banking/products?effective=CURRENT&updated-since=<dateTime>&brand=<string>&product-category=TRANS_AND_SAVINGS_ACCOUNTS&page=1&page-size=25",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"banking",
								"products"
							],
							"query": [
								{
									"key": "effective",
									"value": "CURRENT"
								},
								{
									"key": "updated-since",
									"value": "<dateTime>"
								},
								{
									"key": "brand",
									"value": "<string>"
								},
								{
									"key": "product-category",
									"value": "TRANS_AND_SAVINGS_ACCOUNTS"
								},
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "page-size",
									"value": "25"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "x-fapi-interaction-id",
							"value": "qui eu sunt amet",
							"description": "An [RFC4122](https://tools.ietf.org/html/rfc4122) UUID used as a correlation id. If provided, the data holder must play back this value in the x-fapi-interaction-id response header. If not provided a [RFC4122] UUID value is required to be provided in the response header to track the interaction. This header MUST be responded for success and error responses for authenticated APIs."
						},
						{
							"key": "x-v",
							"value": "qui eu sunt amet",
							"description": "The [version](https://consumerdatastandardsaustralia.github.io/standards/#response-headers) of the API end point that the data holder has responded with."
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"errors\": [\n    {\n      \"code\": \"urn:au-cds:error:cds-all:GeneralError/Unexpected\",\n      \"title\": \"Unexpected Error Encountered\",\n      \"detail\": \"cillum Duis exercitation est eiusmod\",\n      \"meta\": {\n        \"urn\": \"urn:au-cds:error:cds-all:GeneralError/Unexpected\"\n      }\n    },\n    {\n      \"code\": \"urn:au-cds:error:cds-all:GeneralError/Unexpected\",\n      \"title\": \"Unexpected Error Encountered\",\n      \"detail\": \"veniam in pariatur deserunt\",\n      \"meta\": {\n        \"urn\": \"urn:au-cds:error:cds-all:GeneralError/Unexpected\"\n      }\n    }\n  ]\n}"
				},
				{
					"name": "Service Unavailable",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) Version of the API end point requested by the client. Must be set to a positive integer.",
								"key": "x-v",
								"value": "<string>"
							},
							{
								"description": "Minimum version of the API end point requested by the client. Must be set to a positive integer if provided.",
								"key": "x-min-v",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/banking/products?effective=CURRENT&updated-since=<dateTime>&brand=<string>&product-category=TRANS_AND_SAVINGS_ACCOUNTS&page=1&page-size=25",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"banking",
								"products"
							],
							"query": [
								{
									"key": "effective",
									"value": "CURRENT"
								},
								{
									"key": "updated-since",
									"value": "<dateTime>"
								},
								{
									"key": "brand",
									"value": "<string>"
								},
								{
									"key": "product-category",
									"value": "TRANS_AND_SAVINGS_ACCOUNTS"
								},
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "page-size",
									"value": "25"
								}
							]
						}
					},
					"status": "Service Unavailable",
					"code": 503,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "x-fapi-interaction-id",
							"value": "qui eu sunt amet",
							"description": "An [RFC4122](https://tools.ietf.org/html/rfc4122) UUID used as a correlation id. If provided, the data holder must play back this value in the x-fapi-interaction-id response header. If not provided a [RFC4122] UUID value is required to be provided in the response header to track the interaction. This header MUST be responded for success and error responses for authenticated APIs."
						},
						{
							"key": "x-v",
							"value": "qui eu sunt amet",
							"description": "The [version](https://consumerdatastandardsaustralia.github.io/standards/#response-headers) of the API end point that the data holder has responded with."
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"errors\": [\n    {\n      \"code\": \"urn:au-cds:error:cds-all:Service/Unavailable\",\n      \"title\": \"Service Unavailable\",\n      \"detail\": \"eiusmod elit enim exercitation qui\",\n      \"meta\": {\n        \"urn\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    },\n    {\n      \"code\": \"urn:au-cds:error:cds-all:Service/Unavailable\",\n      \"title\": \"Service Unavailable\",\n      \"detail\": \"pariatur irure adipisicing\",\n      \"meta\": {\n        \"urn\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    }\n  ]\n}"
				}
			]
		},
		{
			"name": "Get Product Detail Business Loan",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response time is less than 250ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(250);",
							"});",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"description": "(Required) Version of the API end point requested by the client. Must be set to a positive integer.",
						"key": "x-v",
						"value": "{{x-v}}"
					},
					{
						"description": "Minimum version of the API end point requested by the client. Must be set to a positive integer if provided.",
						"key": "x-min-v",
						"value": "3",
						"disabled": true
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{BaseURL}}/:productId",
					"host": [
						"{{BaseURL}}"
					],
					"path": [
						":productId"
					],
					"variable": [
						{
							"key": "productId",
							"value": "b5ee1091-e3af-4517-8f8f-8cc52434472b"
						}
					]
				}
			},
			"response": [
				{
					"name": "Success",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) Version of the API end point requested by the client. Must be set to a positive integer.",
								"key": "x-v",
								"value": "<string>"
							},
							{
								"description": "Minimum version of the API end point requested by the client. Must be set to a positive integer if provided.",
								"key": "x-min-v",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/banking/products/:productId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"banking",
								"products",
								":productId"
							],
							"variable": [
								{
									"key": "productId",
									"value": "<string>",
									"description": "(Required) ID of the specific product requested"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "x-v",
							"value": "qui eu sunt amet",
							"description": "The [version](https://consumerdatastandardsaustralia.github.io/standards/#response-headers) of the API end point that the data holder has responded with."
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"data\": {\n    \"bundles\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"constraints\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"depositRates\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"eligibility\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"features\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"fees\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"lendingRates\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"links\": {\n    \"self\": \"http://KqarVaHmzNwPdSAxN.poih6mDbRqXps.fmQaZLjmRcPtGlMJmy7FiJBGX\"\n  },\n  \"meta\": {}\n}"
				},
				{
					"name": "Bad Request",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) Version of the API end point requested by the client. Must be set to a positive integer.",
								"key": "x-v",
								"value": "<string>"
							},
							{
								"description": "Minimum version of the API end point requested by the client. Must be set to a positive integer if provided.",
								"key": "x-min-v",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/banking/products/:productId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"banking",
								"products",
								":productId"
							],
							"variable": [
								{
									"key": "productId",
									"value": "<string>",
									"description": "(Required) ID of the specific product requested"
								}
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "x-fapi-interaction-id",
							"value": "qui eu sunt amet",
							"description": "An [RFC4122](https://tools.ietf.org/html/rfc4122) UUID used as a correlation id. If provided, the data holder must play back this value in the x-fapi-interaction-id response header. If not provided a [RFC4122] UUID value is required to be provided in the response header to track the interaction. This header MUST be responded for success and error responses for authenticated APIs."
						},
						{
							"key": "x-v",
							"value": "qui eu sunt amet",
							"description": "The [version](https://consumerdatastandardsaustralia.github.io/standards/#response-headers) of the API end point that the data holder has responded with."
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"errors\": [\n    {\n      \"code\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"title\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"detail\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"meta\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"code\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"title\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"detail\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"meta\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ]\n}"
				},
				{
					"name": "Resource Not Found",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) Version of the API end point requested by the client. Must be set to a positive integer.",
								"key": "x-v",
								"value": "<string>"
							},
							{
								"description": "Minimum version of the API end point requested by the client. Must be set to a positive integer if provided.",
								"key": "x-min-v",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/banking/products/:productId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"banking",
								"products",
								":productId"
							],
							"variable": [
								{
									"key": "productId",
									"value": "<string>",
									"description": "(Required) ID of the specific product requested"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "x-fapi-interaction-id",
							"value": "qui eu sunt amet",
							"description": "An [RFC4122](https://tools.ietf.org/html/rfc4122) UUID used as a correlation id. If provided, the data holder must play back this value in the x-fapi-interaction-id response header. If not provided a [RFC4122] UUID value is required to be provided in the response header to track the interaction. This header MUST be responded for success and error responses for authenticated APIs."
						},
						{
							"key": "x-v",
							"value": "qui eu sunt amet",
							"description": "The [version](https://consumerdatastandardsaustralia.github.io/standards/#response-headers) of the API end point that the data holder has responded with."
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"errors\": [\n    {\n      \"code\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"title\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"detail\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"meta\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"code\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"title\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"detail\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"meta\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ]\n}"
				},
				{
					"name": "Not Acceptable",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) Version of the API end point requested by the client. Must be set to a positive integer.",
								"key": "x-v",
								"value": "<string>"
							},
							{
								"description": "Minimum version of the API end point requested by the client. Must be set to a positive integer if provided.",
								"key": "x-min-v",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/banking/products/:productId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"banking",
								"products",
								":productId"
							],
							"variable": [
								{
									"key": "productId",
									"value": "<string>",
									"description": "(Required) ID of the specific product requested"
								}
							]
						}
					},
					"status": "Not Acceptable",
					"code": 406,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "x-fapi-interaction-id",
							"value": "qui eu sunt amet",
							"description": "An [RFC4122](https://tools.ietf.org/html/rfc4122) UUID used as a correlation id. If provided, the data holder must play back this value in the x-fapi-interaction-id response header. If not provided a [RFC4122] UUID value is required to be provided in the response header to track the interaction. This header MUST be responded for success and error responses for authenticated APIs."
						},
						{
							"key": "x-v",
							"value": "qui eu sunt amet",
							"description": "The [version](https://consumerdatastandardsaustralia.github.io/standards/#response-headers) of the API end point that the data holder has responded with."
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"errors\": [\n    {\n      \"code\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"title\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"detail\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"meta\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"code\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"title\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"detail\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"meta\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ]\n}"
				},
				{
					"name": "Internal Server Error",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) Version of the API end point requested by the client. Must be set to a positive integer.",
								"key": "x-v",
								"value": "<string>"
							},
							{
								"description": "Minimum version of the API end point requested by the client. Must be set to a positive integer if provided.",
								"key": "x-min-v",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/banking/products/:productId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"banking",
								"products",
								":productId"
							],
							"variable": [
								{
									"key": "productId",
									"value": "<string>",
									"description": "(Required) ID of the specific product requested"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "x-fapi-interaction-id",
							"value": "qui eu sunt amet",
							"description": "An [RFC4122](https://tools.ietf.org/html/rfc4122) UUID used as a correlation id. If provided, the data holder must play back this value in the x-fapi-interaction-id response header. If not provided a [RFC4122] UUID value is required to be provided in the response header to track the interaction. This header MUST be responded for success and error responses for authenticated APIs."
						},
						{
							"key": "x-v",
							"value": "qui eu sunt amet",
							"description": "The [version](https://consumerdatastandardsaustralia.github.io/standards/#response-headers) of the API end point that the data holder has responded with."
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"errors\": [\n    {\n      \"code\": \"urn:au-cds:error:cds-all:GeneralError/Unexpected\",\n      \"title\": \"Unexpected Error Encountered\",\n      \"detail\": \"cillum Duis exercitation est eiusmod\",\n      \"meta\": {\n        \"urn\": \"urn:au-cds:error:cds-all:GeneralError/Unexpected\"\n      }\n    },\n    {\n      \"code\": \"urn:au-cds:error:cds-all:GeneralError/Unexpected\",\n      \"title\": \"Unexpected Error Encountered\",\n      \"detail\": \"veniam in pariatur deserunt\",\n      \"meta\": {\n        \"urn\": \"urn:au-cds:error:cds-all:GeneralError/Unexpected\"\n      }\n    }\n  ]\n}"
				},
				{
					"name": "Service Unavailable",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) Version of the API end point requested by the client. Must be set to a positive integer.",
								"key": "x-v",
								"value": "<string>"
							},
							{
								"description": "Minimum version of the API end point requested by the client. Must be set to a positive integer if provided.",
								"key": "x-min-v",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/banking/products/:productId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"banking",
								"products",
								":productId"
							],
							"variable": [
								{
									"key": "productId",
									"value": "<string>",
									"description": "(Required) ID of the specific product requested"
								}
							]
						}
					},
					"status": "Service Unavailable",
					"code": 503,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "x-fapi-interaction-id",
							"value": "qui eu sunt amet",
							"description": "An [RFC4122](https://tools.ietf.org/html/rfc4122) UUID used as a correlation id. If provided, the data holder must play back this value in the x-fapi-interaction-id response header. If not provided a [RFC4122] UUID value is required to be provided in the response header to track the interaction. This header MUST be responded for success and error responses for authenticated APIs."
						},
						{
							"key": "x-v",
							"value": "qui eu sunt amet",
							"description": "The [version](https://consumerdatastandardsaustralia.github.io/standards/#response-headers) of the API end point that the data holder has responded with."
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"errors\": [\n    {\n      \"code\": \"urn:au-cds:error:cds-all:Service/Unavailable\",\n      \"title\": \"Service Unavailable\",\n      \"detail\": \"eiusmod elit enim exercitation qui\",\n      \"meta\": {\n        \"urn\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    },\n    {\n      \"code\": \"urn:au-cds:error:cds-all:Service/Unavailable\",\n      \"title\": \"Service Unavailable\",\n      \"detail\": \"pariatur irure adipisicing\",\n      \"meta\": {\n        \"urn\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    }\n  ]\n}"
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}